{"version":3,"sources":["store/Timer/actions.js","store/Timer/reducers.js","store/Alert/actions.js","store/Alert/reducers.js","store/Log/actions.js","store/Log/reducers.js","store/reducers.js","store/sagas/index.js","components/PageNotFound/PageNotFound.jsx","components/PageNotFound/styles.js","components/Timer/Timer.jsx","components/Timer/styles.js","components/Timer/TimerContainer.jsx","components/Timer/index.js","components/Alert/Alert.jsx","components/Alert/AlertContainer.jsx","components/Alert/index.js","components/Alert/styles.js","components/Chart/createChartData.js","components/Chart/Chart.jsx","components/Chart/styles.js","components/Chart/ChartContainer.jsx","components/Chart/index.js","components/Log/Log.jsx","components/Log/styles.js","components/Log/LogContainer.jsx","components/Log/index.js","components/TasksTimer/styles.js","components/TasksTimer/TasksTimer.jsx","components/TasksTimer/index.js","components/Task/Task.jsx","components/Task/TaskChart.jsx","components/Task/createTaskChartData.js","components/Task/styles.js","components/Task/TaskContainer.jsx","components/Task/index.js","components/App/App.js","components/App/index.js","serviceWorker.js","index.js"],"names":["START_TASK","STOP_TASK","SET_TIME","SET_TASK_NAME","SYNC_TASK_PROPS","stopTask","type","syncTaskProps","payload","initialState","time","taskProps","id","taskName","timerStartTime","timerStopTime","OPEN_ALERT_WINDOW","openAlertWindow","taskNameIsEmpty","PUSH_TASK_IN_TASKS_LIST","SET_TASKS_LIST_VALUE","SYNC_TASKS_LIST","setTasksListValue","syncTasksList","tasksList","combineReducers","timer","state","action","alert","tasksLog","syncStateAndStorage","setStateFromStorage","watcher","rootSaga","delay","select","call","localStorage","setItem","JSON","stringify","parse","getItem","put","takeLatest","all","withStyles","container","paddingTop","color","paddingBottom","buttonContainer","display","justifyContent","paddingRight","props","classes","Grid","className","justify","Card","CardContent","Typography","variant","CardActions","Button","size","component","Link","to","Timer","verifyTaskName","setTaskName","startTimer","timerContainer","taskInput","timerFab","timerButton","label","placeholder","value","onChange","event","target","Fab","onClick","alignItems","flexDirection","textAlign","opacity","width","height","margin","background","fontSize","marginBottom","TimerContainer","intervalID","setTime","Interval","fromDateTimes","DateTime","fromISO","local","toDuration","toFormat","startTask","toISO","stopTimer","pushTaskInTasksList","createTaskId","lastTaskId","Math","max","map","task","this","setInterval","clearInterval","Component","mapDispatchToProps","connect","styles","Alert","modalContainer","modalContent","alertContent","alertName","modal","Modal","aria-describedby","aria-labelledby","open","AlertContainer","boxShadow","backgroundColor","padding","createChartData","chartData","hour","hourStart","fromObject","minute","second","hourEnd","hourInterval","tasksTimeInThisHour","filter","intersection","tasksMinutesInThisHour","length","reduce","accumulator","tasksMinutes","taskStartDateTime","taskStopDateTime","toObject","minutes","round","push","Chart","getRandomTasks","generateButtonContainer","generateButton","data","top","left","strokeDasharray","dataKey","name","barSize","fill","item","xs","getRandom","min","floor","random","ChartContainer","randomNumberOfTask","plus","seconds","Log","deleteCurrentTask","tableRow","noTasks","tasksButton","Table","TableHead","TableRow","TableCell","TableBody","key","scope","colSpan","LogContainer","tasksListWithoutCurrentTask","tasksTimerContainer","tabsContainer","TasksTimer","location","currentTab","pathname","lg","AppBar","position","Tabs","Tab","path","exact","Task","card","button","TaskChart","dataForChart","createTaskChartData","taskForChart","startTime","taskStartDateFromISO","findStartTime","stopTime","taskStopDateFromISO","findStopTime","TaskContainer","match","find","Number","params","direction","App","render","PageNotFound","Boolean","window","hostname","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd90ae1e.chunk.js","sourcesContent":["export const START_TASK = \"START_TASK\";\nexport const STOP_TASK = \"STOP_TASK\";\nexport const SET_TIME = \"SET_TIME\";\nexport const SET_TASK_NAME = \"SET_TASK_NAME\";\nexport const SYNC_TASK_PROPS = \"SYNC_TASK_PROPS\";\n\nexport const startTask = payload => {\n  return { type: START_TASK, payload };\n};\n\nexport const stopTask = () => {\n  return { type: STOP_TASK };\n};\n\nexport const setTime = payload => {\n  return { type: SET_TIME, payload };\n};\n\nexport const setTaskName = payload => {\n  return { type: SET_TASK_NAME, payload };\n};\n\nexport const syncTaskProps = payload => {\n  return { type: SYNC_TASK_PROPS, payload };\n};\n","import {\n  START_TASK,\n  STOP_TASK,\n  SET_TIME,\n  SET_TASK_NAME,\n  SYNC_TASK_PROPS\n} from \"./actions\";\n\nconst initialState = {\n  time: \"00:00:00\",\n\n  taskProps: {\n    id: null,\n    taskName: null,\n    timerStartTime: null,\n    timerStopTime: null\n  }\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case START_TASK:\n      return {\n        ...state,\n        taskProps: {\n          ...state.taskProps,\n          timerStopTime: null,\n          timerStartTime: action.payload\n        }\n      };\n\n    case STOP_TASK:\n      return {\n        ...state,\n        time: initialState.time,\n        taskProps: initialState.taskProps\n      };\n\n    case SET_TIME:\n      return {\n        ...state,\n        time: action.payload\n      };\n\n    case SET_TASK_NAME:\n      return {\n        ...state,\n        taskProps: {\n          ...state.taskProps,\n          taskName: action.payload\n        }\n      };\n\n    case SYNC_TASK_PROPS:\n      return {\n        ...state,\n        taskProps: {\n          ...state.taskProps,\n          ...action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n","export const OPEN_ALERT_WINDOW = \"OPEN_ALERT_WINDOW\";\n\nexport const openAlertWindow = payload => {\n  return { type: OPEN_ALERT_WINDOW, payload };\n};\n","import { OPEN_ALERT_WINDOW } from \"./actions\";\n\nconst initialState = {\n  taskNameIsEmpty: false\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case OPEN_ALERT_WINDOW:\n      return {\n        ...state,\n        taskNameIsEmpty: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","export const PUSH_TASK_IN_TASKS_LIST = \"PUSH_TASK_IN_TASKS_LIST\";\nexport const SET_TASKS_LIST_VALUE = \"SET_TASKS_LIST_VALUE\";\nexport const SYNC_TASKS_LIST = \"SYNC_STATE_FROM_STORAGE\";\n\nexport const pushTaskInTasksList = payload => {\n  return { type: PUSH_TASK_IN_TASKS_LIST, payload };\n};\n\nexport const setTasksListValue = payload => {\n  return { type: SET_TASKS_LIST_VALUE, payload };\n};\n\nexport const syncTasksList = payload => {\n  return { type: SYNC_TASKS_LIST, payload };\n};\n","import {\n  PUSH_TASK_IN_TASKS_LIST,\n  SET_TASKS_LIST_VALUE,\n  SYNC_TASKS_LIST\n} from \"./actions\";\n\nconst initialState = {\n  tasksList: []\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case PUSH_TASK_IN_TASKS_LIST:\n      return {\n        ...state,\n        tasksList: [...state.tasksList, action.payload]\n      };\n\n    case SET_TASKS_LIST_VALUE:\n      return {\n        ...state,\n        tasksList: action.payload\n      };\n\n    case SYNC_TASKS_LIST:\n      return {\n        ...state,\n        tasksList: [...state.tasksList, ...action.payload]\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport timerReducer from \"./Timer/reducers\";\nimport alertReducer from \"./Alert/reducers\";\nimport tasksLogReducer from \"./Log/reducers\";\n\nexport default combineReducers({\n  timer: timerReducer,\n  alert: alertReducer,\n  tasksLog: tasksLogReducer\n});\n","import { all, call, select, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { syncTaskProps, stopTask } from \"../Timer/actions\";\nimport { syncTasksList } from \"../Log/actions\";\n\nexport function* syncStateAndStorage() {\n  yield delay(300);\n\n  const {\n    timer: {\n      taskProps: { timerStartTime, taskName }\n    },\n\n    tasksLog: { tasksList }\n  } = yield select();\n\n  yield call(() => {\n    localStorage.setItem(\"tasksList\", JSON.stringify(tasksList));\n\n    localStorage.setItem(\n      \"startTimeAndTaskName\",\n      JSON.stringify({ timerStartTime, taskName })\n    );\n  });\n}\n\nexport function* setStateFromStorage() {\n  const tasksList = yield call(() => {\n    return JSON.parse(localStorage.getItem(\"tasksList\")) || [];\n  });\n\n  const taskProps = yield call(() => {\n    return (\n      JSON.parse(localStorage.getItem(\"startTimeAndTaskName\")) || stopTask()\n    );\n  });\n\n  yield put(syncTasksList(tasksList));\n  yield put(syncTaskProps(taskProps));\n}\n\nexport function* watcher() {\n  yield call(setStateFromStorage);\n  yield takeLatest(\"*\", syncStateAndStorage);\n}\n\nexport default function* rootSaga() {\n  yield all([watcher()]);\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nfunction PageNotFound(props) {\n  const { container, buttonContainer } = props.classes;\n  return (\n    <Grid container className={container} justify=\"center\">\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\">\n            There is no such task :(\n          </Typography>\n          <Typography color=\"textSecondary\">\n            Can try to find it on the home page?\n          </Typography>\n        </CardContent>\n        <CardActions className={buttonContainer}>\n          <Button size=\"small\" component={Link} to={\"/tasks\"}>\n            Homepage\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n}\n\nexport default withStyles(styles)(PageNotFound);\n","export default {\n  container: {\n    paddingTop: \"10%\",\n\n    \"& h4\": {\n      color: \"#00BCD3\",\n      paddingBottom: \"1rem\"\n    }\n  },\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n\n    paddingRight: \"1rem\",\n    paddingBottom: \".5rem\",\n\n    \"& span\": {\n      color: \"#00BCD3\"\n    }\n  }\n};\n","import React from \"react\";\n\nimport TextField from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\n\nexport default function Timer(props) {\n  const {\n    verifyTaskName,\n    setTaskName,\n    startTimer,\n\n    timerStartTime,\n    taskName,\n    time,\n\n    classes\n  } = props;\n\n  const { timerContainer, taskInput, timerFab, timerButton } = classes;\n\n  return (\n    <div className={timerContainer}>\n      <TextField\n        label=\"Name of your task\"\n        placeholder=\"Name of your task\"\n        className={taskInput}\n        value={taskName || \"\"}\n        onChange={event => setTaskName(event.target.value)}\n      />\n\n      <Fab className={timerFab}>{time}</Fab>\n      {timerStartTime ? (\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          className={timerButton}\n          onClick={verifyTaskName}\n        >\n          STOP\n        </Button>\n      ) : (\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          className={timerButton}\n          onClick={startTimer}\n        >\n          START\n        </Button>\n      )}\n    </div>\n  );\n}\n","const violet = \"#4823C2\";\n\nexport default {\n  timerContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n\n  taskInput: {\n    \"& $input::placeholder\": {\n      color: violet,\n      textAlign: \"center\",\n      opacity: 1\n    }\n  },\n\n  timerFab: {\n    width: \"10rem\",\n    height: \"10rem\",\n\n    margin: \"1.5rem\",\n\n    background: \"white\",\n\n    color: violet,\n    fontSize: \"1.5rem\"\n  },\n\n  timerButton: {\n    color: violet,\n    background: \"white\",\n    marginBottom: \"1.5rem\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DateTime, Interval } from \"luxon\";\n\nimport {\n  setTaskName,\n  startTask,\n  stopTask,\n  setTime\n} from \"../../store/Timer/actions\";\n\nimport { pushTaskInTasksList } from \"../../store/Log/actions\";\n\nimport { openAlertWindow } from \"../../store/Alert/actions\";\n\nimport Timer from \"./Timer\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nclass TimerContainer extends Component {\n  intervalID = 0;\n\n  componentDidMount() {\n    if (this.props.taskProps.timerStartTime) {\n      this.timer();\n    }\n\n    this.intervalID = setInterval(this.timer, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  timer = () => {\n    const {\n      taskProps: { timerStartTime },\n      setTime\n    } = this.props;\n\n    timerStartTime\n      ? setTime(\n          Interval.fromDateTimes(\n            DateTime.fromISO(this.props.taskProps.timerStartTime),\n            DateTime.local()\n          )\n            .toDuration()\n            .toFormat(\"hh:mm:ss\")\n        )\n      : setTime(\"00:00:00\");\n  };\n\n  startTimer = () => {\n    this.props.startTask(DateTime.local().toISO());\n  };\n\n  verifyTaskName = () => {\n    const { taskProps, openAlertWindow } = this.props;\n\n    taskProps.taskName ? this.stopTimer() : openAlertWindow(true);\n  };\n\n  stopTimer = () => {\n    const { taskProps, stopTask, pushTaskInTasksList } = this.props;\n\n    stopTask();\n\n    pushTaskInTasksList({\n      ...taskProps,\n      id: this.createTaskId(),\n      timerStopTime: DateTime.local().toISO()\n    });\n  };\n\n  createTaskId = () => {\n    const { tasksList } = this.props;\n\n    const lastTaskId = Math.max(...tasksList.map(task => task.id));\n\n    return lastTaskId > 0 ? lastTaskId + 1 : 1;\n  };\n\n  render() {\n    const {\n      time,\n      classes,\n      setTaskName,\n\n      taskProps: { timerStartTime, taskName }\n    } = this.props;\n\n    return (\n      <Timer\n        verifyTaskName={this.verifyTaskName}\n        startTimer={this.startTimer}\n        setTaskName={setTaskName}\n        timerStartTime={timerStartTime}\n        taskName={taskName}\n        time={time}\n        classes={classes}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ timer, tasksLog }) => {\n  return {\n    time: timer.time,\n    taskProps: timer.taskProps,\n\n    tasksList: tasksLog.tasksList\n  };\n};\n\nconst mapDispatchToProps = {\n  pushTaskInTasksList,\n  setTaskName,\n  startTask,\n  stopTask,\n  setTime,\n\n  openAlertWindow\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(TimerContainer));\n","import TimerContainer from \"./TimerContainer\";\nexport default TimerContainer;","import React from \"react\";\n\nimport Modal from \"@material-ui/core/Modal\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function Alert(props) {\n  const { openAlertWindow, taskNameIsEmpty, classes } = props;\n\n  const {\n    buttonContainer,\n    modalContainer,\n    modalContent,\n    alertContent,\n    alertName,\n    modal\n  } = classes;\n\n  return (\n    <Modal\n      aria-describedby=\"simple-modal-description\"\n      aria-labelledby=\"simple-modal-title\"\n      className={modalContainer}\n      open={taskNameIsEmpty}\n    >\n      <div className={modal}>\n        <Grid container className={modalContent}>\n          <Typography variant=\"h6\" id=\"modal-title\" className={alertName}>\n            Empty task name\n          </Typography>\n          <Typography\n            id=\"simple-modal-description\"\n            className={alertContent}\n            variant=\"subtitle1\"\n          >\n            You are trying close your task without name, enter the title and try\n            again!\n          </Typography>\n        </Grid>\n\n        <div className={buttonContainer}>\n          <Button\n            onClick={() => {\n              openAlertWindow(false);\n            }}\n          >\n            Close\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { openAlertWindow } from \"../../store/Alert/actions\";\n\nimport Alert from \"./Alert\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nfunction AlertContainer(props) {\n  const { taskNameIsEmpty, openAlertWindow, classes } = props;\n\n  return (\n    <Alert\n      openAlertWindow={openAlertWindow}\n      taskNameIsEmpty={taskNameIsEmpty}\n      classes={classes}\n    />\n  );\n}\n\nconst mapStateToProps = ({ alert }) => {\n  return {\n    taskNameIsEmpty: alert.taskNameIsEmpty\n  };\n};\n\nconst mapDispatchToProps = {\n  openAlertWindow\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(AlertContainer));\n","import AlertContainer from \"./AlertContainer\";\nexport default AlertContainer;\n","export default {\n  modalContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  modal: {\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    width: \"60%\",\n\n    boxShadow: \"1px 2px 5px black\",\n    backgroundColor: \"#fff\"\n  },\n  modalContent: {\n    flexDirection: \"column\",\n\n    padding: \"1.5rem\"\n  },\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n\n    paddingRight: \"1rem\",\n    paddingBottom: \".5rem\",\n\n    \"& span\": {\n      color: \"#00BCD3\"\n    }\n  },\n  alertName: {\n    paddingBottom: \"1rem\",\n\n    color: \"#CA0045\"\n  },\n  alertContent: {\n    opacity: 0.7\n  }\n};\n","import { DateTime, Interval } from \"luxon\";\n\nconst createChartData = tasksList => {\n  const chartData = [];\n\n  for (let hour = 0; hour < 24; hour++) {\n    const hourStart = DateTime.fromObject({ hour, minute: 0, second: 0 });\n    const hourEnd = DateTime.fromObject({ hour, minute: 59, second: 59 });\n    const hourInterval = Interval.fromDateTimes(hourStart, hourEnd);\n\n    const tasksTimeInThisHour = tasksList.filter(task =>\n      hourInterval.intersection(\n        Interval.fromDateTimes(\n          DateTime.fromISO(task.timerStartTime),\n          DateTime.fromISO(task.timerStopTime)\n        )\n      )\n    );\n\n    let tasksMinutesInThisHour = 0;\n\n    if (tasksTimeInThisHour.length > 0) {\n      tasksMinutesInThisHour = tasksTimeInThisHour.reduce(\n        (accumulator, task) => {\n          let tasksMinutes;\n\n          const taskStartDateTime = DateTime.fromISO(task.timerStartTime);\n          const taskStopDateTime = DateTime.fromISO(task.timerStopTime);\n\n          taskStartDateTime.hour === hour && taskStopDateTime.hour === hour\n            ? (tasksMinutes = Interval.fromDateTimes(\n                taskStartDateTime,\n                taskStopDateTime\n              )\n                .toDuration(\"minutes\")\n                .toObject().minutes)\n            : taskStartDateTime.hour === hour\n            ? (tasksMinutes = 60 - taskStartDateTime.minute)\n            : taskStopDateTime.hour === hour\n            ? (tasksMinutes = taskStopDateTime.minute)\n            : (tasksMinutes = 60);\n\n          return accumulator + Math.round(tasksMinutes);\n        },\n        0\n      );\n    }\n\n    chartData.push({\n      hour,\n      minutes: 60,\n      tasksTimeInThisHour: tasksMinutesInThisHour || 0\n    });\n  }\n\n  return chartData;\n};\n\nexport default createChartData;\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {\n  ResponsiveContainer,\n  BarChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Bar\n} from \"recharts\";\n\nexport default function Chart(props) {\n  const { getRandomTasks, chartData, classes } = props;\n  const { generateButtonContainer, generateButton } = classes;\n\n  return (\n    <div>\n      <ResponsiveContainer id=\"container\" width=\"100%\" height={300}>\n        <BarChart data={chartData} margin={{ top: 20, left: -25 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"hour\" />\n          <YAxis dataKey=\"minutes\" />\n          <Tooltip />\n          <Legend />\n          <Bar\n            dataKey=\"tasksTimeInThisHour\"\n            name=\"Minutes in this hours\"\n            barSize={20}\n            fill=\"#4823C2\"\n          />\n        </BarChart>\n      </ResponsiveContainer>\n      <Grid container className={generateButtonContainer}>\n        <Grid item xs={12}>\n          <Button\n            className={generateButton}\n            variant=\"contained\"\n            size=\"small\"\n            onClick={() => getRandomTasks()}\n          >\n            Generate\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","const violet = \"#4823C2\";\n\nexport default {\n  generateButtonContainer: {\n    justifyContent: \"justify-end\",\n    textAlign: \"right\",\n    padding: \"1rem 0\"\n  },\n  generateButton: {\n    color: violet,\n    background: \"white\"\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DateTime } from \"luxon\";\n\nimport createChartData from \"./createChartData\";\nimport { setTasksListValue } from \"../../store/Log/actions\";\n\nimport Chart from \"./Chart\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nconst getRandom = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min + 1);\n};\n\nfunction ChartContainer(props) {\n  const { setTasksListValue, tasksList, classes } = props;\n\n  const getRandomTasks = () => {\n    const data = [];\n\n    let timerStartTime = DateTime.fromObject({ hour: 0, minute: 0, second: 0 });\n    let timerStopTime = null;\n\n    const randomNumberOfTask = getRandom(10, 16);\n\n    for (let task = 1; task < randomNumberOfTask; task++) {\n      timerStartTime = timerStartTime.plus({\n        seconds: getRandom(0, 60 * 60 * 1.5)\n      });\n\n      timerStopTime = timerStartTime.plus({\n        seconds: getRandom(60 * 10, 60 * 60 * 1.5)\n      });\n\n      data.push({\n        id: task,\n        taskName: `Random task #${task}`,\n        timerStartTime: timerStartTime,\n        timerStopTime: timerStopTime\n      });\n\n      timerStartTime = timerStopTime;\n    }\n\n    setTasksListValue(data);\n  };\n\n  const data = createChartData(tasksList);\n\n  return (\n    <Chart getRandomTasks={getRandomTasks} chartData={data} classes={classes} />\n  );\n}\nconst mapStateToProps = ({ tasksLog }) => {\n  return {\n    tasksList: tasksLog.tasksList\n  };\n};\n\nconst mapDispatchToProps = { setTasksListValue };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ChartContainer));\n","import ChartContainer from \"./ChartContainer\";\nexport default ChartContainer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DateTime, Interval } from \"luxon\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function Log(props) {\n  const { deleteCurrentTask, tasksList, classes } = props;\n  const { tableRow, noTasks, tasksButton } = classes;\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>№</TableCell>\n          <TableCell>Task</TableCell>\n          <TableCell>Time start</TableCell>\n          <TableCell>Time end</TableCell>\n          <TableCell>Time spend</TableCell>\n          <TableCell>Info</TableCell>\n          <TableCell>Delete</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {tasksList.length > 0 ? (\n          tasksList.map(task => (\n            <TableRow key={task.id} className={tableRow}>\n              <TableCell component=\"th\" scope=\"row\">\n                {task.id}\n              </TableCell>\n              <TableCell>{task.taskName}</TableCell>\n              <TableCell>\n                {DateTime.fromISO(task.timerStartTime).toFormat(\"HH:mm:ss\")}\n              </TableCell>\n              <TableCell>\n                {DateTime.fromISO(task.timerStopTime).toFormat(\"HH:mm:ss\")}\n              </TableCell>\n              <TableCell>\n                {Interval.fromDateTimes(\n                  DateTime.fromISO(task.timerStartTime),\n                  DateTime.fromISO(task.timerStopTime)\n                )\n                  .toDuration()\n                  .toFormat(\"hh:mm:ss\")}\n              </TableCell>\n              <TableCell>\n                <Button\n                  className={tasksButton}\n                  variant=\"contained\"\n                  size=\"small\"\n                  component={Link}\n                  to={`/tasks/${task.id}`}\n                >\n                  Info\n                </Button>\n              </TableCell>\n              <TableCell>\n                <Button\n                  className={tasksButton}\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={() => deleteCurrentTask(task.id)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))\n        ) : (\n          <TableRow className={tableRow}>\n            <TableCell className={noTasks} colSpan={7}>\n              No tasks to show\n            </TableCell>\n          </TableRow>\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n","const cyanogen = \"#E8F6FF\";\nconst violet = \"#4823C2\";\n\nexport default {\n  tableRow: {\n    background: cyanogen,\n    color: violet\n  },\n  noTasks: {\n    textAlign: \"center\"\n  },\n  tasksButton: {\n    color: violet,\n    background: \"white\"\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setTasksListValue } from \"../../store/Log/actions\";\n\nimport Log from \"./Log\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nfunction LogContainer(props) {\n  const { setTasksListValue, tasksList, classes } = props;\n\n  const deleteCurrentTask = id => {\n    const tasksListWithoutCurrentTask = tasksList.filter(\n      task => task.id !== id\n    );\n\n    setTasksListValue(tasksListWithoutCurrentTask);\n  };\n\n  return (\n    <Log\n      deleteCurrentTask={deleteCurrentTask}\n      tasksList={tasksList}\n      classes={classes}\n    />\n  );\n}\n\nconst mapStateToProps = ({ tasksLog }) => {\n  return {\n    tasksList: tasksLog.tasksList\n  };\n};\n\nconst mapDispatchToProps = { setTasksListValue };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(LogContainer));\n","import LogContainer from \"./LogContainer\";\nexport default LogContainer;\n","const blue = \"#00BCD3\";\n\nexport default {\n  tasksTimerContainer: {\n    padding: \"2rem\"\n  },\n  tabsContainer: {\n    background: blue,\n    boxShadow: \"none\"\n  }\n};\n","import React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport Timer from \"../Timer\";\nimport Alert from \"../Alert\";\nimport Chart from \"../Chart\";\nimport Log from \"../Log\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nfunction TasksTimer(props) {\n  const { location, classes } = props;\n  const { tasksTimerContainer, tabsContainer } = classes;\n\n  const currentTab = (location.pathname === \"/chart\" && \"Chart\") || \"Log\";\n\n  return (\n    <div className={tasksTimerContainer}>\n      <Grid container justify=\"center\">\n        <Grid item xs={12} lg={10}>\n          <Alert />\n          <Timer />\n        </Grid>\n        <Grid item xs={12} lg={10}>\n          <section>\n            <AppBar position=\"relative\" className={tabsContainer}>\n              <Tabs variant=\"fullWidth\" value={currentTab}>\n                <Tab\n                  value=\"Log\"\n                  label=\"Tasks log\"\n                  component={Link}\n                  to={\"/tasks\"}\n                />\n                <Tab\n                  value=\"Chart\"\n                  label=\"Tasks chart\"\n                  component={Link}\n                  to={\"/chart\"}\n                />\n              </Tabs>\n            </AppBar>\n\n            <Route path=\"/tasks\" exact component={Log} />\n            <Route path=\"/chart\" exact component={Chart} />\n          </section>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(TasksTimer);\n","import TasksTimer from \"./TasksTimer\";\nexport default TasksTimer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DateTime, Interval } from \"luxon\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Task(props) {\n  const { task, classes } = props;\n  const { card, taskName, buttonContainer, button } = classes;\n\n  return (\n    <Card key={task.id} className={card}>\n      <CardContent>\n        <Typography className={taskName} variant=\"h4\" component=\"h2\">\n          {`Task name: ${task.taskName}`}\n        </Typography>\n        <Typography component=\"p\">\n          {DateTime.fromISO(task.timerStartTime).toFormat(\n            \"'The timer was started on' yyyy-MM-dd 'at' HH:mm:ss\"\n          )}\n        </Typography>\n        <Typography component=\"p\">\n          {DateTime.fromISO(task.timerStopTime).toFormat(\n            \"'The timer was stopped on' yyyy-MM-dd 'at' HH:mm:ss\"\n          )}\n        </Typography>\n        <Typography component=\"p\">\n          {Interval.fromDateTimes(\n            DateTime.fromISO(task.timerStartTime),\n            DateTime.fromISO(task.timerStopTime)\n          )\n            .toDuration()\n            .toFormat(\"'Time spent on task:' hh:mm:ss\")}\n        </Typography>\n      </CardContent>\n      <CardActions className={buttonContainer}>\n        <Button className={button} size=\"small\" component={Link} to=\"/tasks\">\n          Back\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\n\nimport {\n  ResponsiveContainer,\n  BarChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Bar\n} from \"recharts\";\n\nexport default function TaskChart(props) {\n  const { dataForChart } = props;\n\n  return (\n    <ResponsiveContainer id=\"container\" width=\"80%\" height={300}>\n      <BarChart data={dataForChart} margin={{ top: 20 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"hour\" />\n        <YAxis dataKey=\"minutes\" />\n        <Tooltip />\n        <Legend />\n        <Bar\n          dataKey=\"tasksTimeInThisHour\"\n          name=\"Minutes in this hours\"\n          barSize={20}\n          fill=\"#4823C2\"\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import { DateTime, Interval } from \"luxon\";\n\nconst createTaskChartData = task => {\n  const chartData = [];\n\n  const findStartTime = () => {\n    const taskStartDateFromISO = DateTime.fromISO(task.timerStartTime);\n    const { hour, minute, second } = taskStartDateFromISO;\n    return { hour, minute, second };\n  };\n\n  const findStopTime = () => {\n    const taskStopDateFromISO = DateTime.fromISO(task.timerStopTime);\n    const { hour, minute, second } = taskStopDateFromISO;\n    return { hour, minute, second };\n  };\n\n  const taskForChart = [\n    { startTime: findStartTime(), stopTime: findStopTime() }\n  ];\n\n  for (let hour = 0; hour < 24; hour++) {\n    const hourStart = DateTime.fromObject({ hour, minute: 0, second: 0 });\n    const hourEnd = DateTime.fromObject({ hour, minute: 59, second: 59 });\n    const hourInterval = Interval.fromDateTimes(hourStart, hourEnd);\n\n    const tasksTimeInThisHour = taskForChart.filter(task =>\n      hourInterval.intersection(\n        Interval.fromDateTimes(\n          DateTime.fromObject(task.startTime),\n          DateTime.fromObject(task.stopTime)\n        )\n      )\n    );\n\n    let tasksMinutesInThisHour = 0;\n\n    if (tasksTimeInThisHour && tasksTimeInThisHour.length > 0) {\n      tasksMinutesInThisHour = tasksTimeInThisHour.reduce(\n        (accumulator, task) => {\n          let tasksMinutes;\n          const taskStartDateTime = DateTime.fromObject(task.startTime);\n          const taskStopDateTime = DateTime.fromObject(task.stopTime);\n\n          taskStartDateTime.hour === hour && taskStopDateTime.hour === hour\n            ? (tasksMinutes = Interval.fromDateTimes(\n                taskStartDateTime,\n                taskStopDateTime\n              )\n                .toDuration(\"minutes\")\n                .toObject().minutes)\n            : taskStartDateTime.hour === hour\n            ? (tasksMinutes = 60 - taskStartDateTime.minute)\n            : taskStopDateTime.hour === hour\n            ? (tasksMinutes = taskStopDateTime.minute)\n            : (tasksMinutes = 60);\n\n          return accumulator + Math.round(tasksMinutes);\n        },\n        0\n      );\n    }\n    chartData.push({\n      hour,\n      minutes: 60,\n      tasksTimeInThisHour: Math.round(tasksMinutesInThisHour) || 0\n    });\n  }\n\n  return chartData;\n};\n\nexport default createTaskChartData;\n","const violet = \"#4823C2\";\n\nexport default {\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  taskName: {\n    color: violet\n  },\n  buttonContainer: {\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    color: violet,\n    background: \"white\"\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Task from \"./Task\";\nimport TaskChart from \"./TaskChart\";\nimport createTaskChartData from \"./createTaskChartData\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nfunction TaskContainer(props) {\n  const { tasksList, match, classes } = props;\n\n  const task = tasksList.find(task => task.id === Number(match.params.id));\n\n  if (!task) {\n    return <Redirect to={\"/404\"} />;\n  }\n\n  const dataForChart = createTaskChartData(task);\n\n  return (\n    <Grid container alignItems=\"center\" direction=\"column\">\n      <Task task={task} classes={classes} />\n      <TaskChart dataForChart={dataForChart} />\n    </Grid>\n  );\n}\n\nconst mapStateToProps = ({ tasksLog }) => {\n  return {\n    tasksList: tasksLog.tasksList\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(TaskContainer));\n","import TaskContainer from \"./TaskContainer\";\nexport default TaskContainer;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport TasksTimer from \"../TasksTimer\";\nimport Task from \"../Task\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact render={() => <Redirect to=\"/tasks\" />} />\n        <Route path=\"/tasks\" exact component={TasksTimer} />\n        <Route path=\"/tasks/:id\" exact component={Task} />\n        <Route path=\"/chart\" exact component={TasksTimer} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from \"./store/reducers\";\nimport { Provider } from \"react-redux\";\nimport rootSaga from \"./store/sagas\";\n\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}