{"version":3,"sources":["store/Timer/actions.js","store/Timer/reducers.js","store/reducers.js","components/Timer/styles.js","components/Timer/Timer.jsx","components/Timer/index.js","components/Chart/styles.js","components/Chart/Chart.jsx","components/Chart/index.js","components/Log/styles.js","components/Log/Log.jsx","components/Log/index.js","components/TasksTimer/styles.js","components/TasksTimer/TasksTimer.jsx","components/TasksTimer/index.js","App.js","serviceWorker.js","index.js"],"names":["START_TIMER","STOP_TIMER","SET_TIME","initialState","time","timerIsStarted","timerStartTime","timerStopTime","combineReducers","timer","state","action","type","payload","timerContainer","marginBottom","textAlign","taskInput","color","opacity","timerFab","width","height","margin","background","fontSize","timerButton","Timer","setInterval","props","setTime","setTimeAction","Interval","fromDateTimes","DateTime","fromISO","localStorage","getItem","local","toDuration","toFormat","startTimer","newDateTime","toISO","startTimerAction","setItem","stopTimer","stopTimerAction","clear","clearInterval","timeInLocalStorage","this","classes","className","label","placeholder","Fab","Button","variant","size","onClick","Component","mapDispatchToProps","connect","withStyles","styles","generateButtonContainer","justifyContent","padding","generateButton","data","name","minutes","Chart","id","top","strokeDasharray","dataKey","barSize","fill","Grid","container","item","xs","cyanogenRow","violetCell","noTasks","tasksButton","Log","Table","TableHead","TableRow","TableCell","TableBody","colSpan","component","scope","tasksTimerContainer","tabsContainer","boxShadow","TasksTimer","onChangeTab","event","value","setState","currentTab","location","pathname","justify","lg","AppBar","position","Tabs","onChange","Tab","Link","to","path","exact","withRouter","store","createStore","reducers","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb97ca74.chunk.js","sourcesContent":["export const START_TIMER = \"START_TIMER\";\nexport const STOP_TIMER = \"STOP_TIMER\";\nexport const SET_TIME = \"SET_TIME\";\n\nexport const startTimerAction = payload => {\n  return { type: START_TIMER, payload };\n};\n\nexport const stopTimerAction = payload => {\n  return { type: STOP_TIMER, payload };\n};\n\nexport const setTimeAction = payload => {\n  return { type: SET_TIME, payload };\n};\n","import { START_TIMER, STOP_TIMER, SET_TIME } from \"./actions\";\n\nconst initialState = {\n  time: \"00:00:00\",\n  timerIsStarted: false,\n  timerStartTime: null,\n  timerStopTime: null\n};\n\nexport default function reducers(state = initialState, action) {\n  switch (action.type) {\n    case START_TIMER:\n      return {\n        ...state,\n        timerIsStarted: true,\n        timerStopTime: null,\n        timerStartTime: action.payload\n      };\n\n    case STOP_TIMER:\n      return {\n        ...state,\n        timerIsStarted: false,\n        timerStartTime: null,\n        timerStopTime: action.payload\n      };\n\n    case SET_TIME:\n      return {\n        ...state,\n        time: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport timerReducers from \"./Timer/reducers\";\n\nexport default combineReducers({\n  timer: timerReducers\n});\n","const violet = \"#4823C2\";\n\nexport default {\n  timerContainer: {\n    marginBottom: \"1.5rem\",\n    textAlign: \"center\"\n  },\n\n  taskInput: {\n    \"& $input::placeholder\": {\n      color: violet,\n      textAlign: \"center\",\n      opacity: 1\n    }\n  },\n\n  timerFab: {\n    width: \"10rem\",\n    height: \"10rem\",\n\n    margin: \"1.5rem\",\n\n    background: \"white\",\n\n    color: violet,\n    fontSize: \"1.5rem\"\n  },\n\n  timerButton: {\n    color: violet,\n    background: \"white\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DateTime, Interval } from \"luxon\";\n\nimport TextField from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\n\nimport {\n  startTimerAction,\n  stopTimerAction,\n  setTimeAction\n} from \"../../store/Timer/actions\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nclass Timer extends Component {\n  componentDidMount() {\n    const timeInLocalStorage = localStorage.getItem(\"timerStartTime\");\n\n    if (timeInLocalStorage) {\n      this.props.startTimerAction(timeInLocalStorage);\n      this.setTime();\n    }\n\n    this.timer();\n  }\n\n  timer = () => {\n    setInterval(() => {\n      return this.props.timerStartTime\n        ? this.setTime()\n        : this.props.setTimeAction(\"00:00:00\");\n    }, 1000);\n  };\n\n  setTime = () => {\n    this.props.setTimeAction(\n      Interval.fromDateTimes(\n        DateTime.fromISO(\n          localStorage.getItem(\"timerStartTime\")\n            ? localStorage.getItem(\"timerStartTime\")\n            : this.props.timerStartTime\n        ),\n        DateTime.local()\n      )\n        .toDuration()\n        .toFormat(\"hh:mm:ss\")\n    );\n  };\n\n  startTimer = () => {\n    const newDateTime = DateTime.local().toISO();\n\n    this.props.startTimerAction(newDateTime);\n\n    localStorage.setItem(\"timerStartTime\", newDateTime);\n  };\n\n  stopTimer = () => {\n    this.props.stopTimerAction(DateTime.local().toISO());\n\n    localStorage.clear();\n\n    clearInterval(this.timer);\n  };\n\n  render() {\n    const {\n      timerContainer,\n      taskInput,\n      timerFab,\n      timerButton\n    } = this.props.classes;\n\n    const { time, timerIsStarted } = this.props;\n    return (\n      <div className={timerContainer}>\n        <div>\n          <TextField\n            label=\"Name of your task\"\n            placeholder=\"Name of your task\"\n            className={taskInput}\n          />\n        </div>\n        <div>\n          <Fab className={timerFab}>{time}</Fab>\n        </div>\n        <div>\n          {timerIsStarted ? (\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              className={timerButton}\n              onClick={this.stopTimer}\n            >\n              STOP\n            </Button>\n          ) : (\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              className={timerButton}\n              onClick={this.startTimer}\n            >\n              START\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ timer }) => {\n  return {\n    time: timer.time,\n    timerIsStarted: timer.timerIsStarted,\n    timerStartTime: timer.timerStartTime,\n    timerStopTime: timer.timerStopTime\n  };\n};\n\nconst mapDispatchToProps = {\n  startTimerAction,\n  stopTimerAction,\n  setTimeAction\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Timer));\n","import Timer from \"./Timer\";\nexport default Timer;","const violet = \"#4823C2\";\n\nexport default {\n  generateButtonContainer: {\n    justifyContent: \"justify-end\",\n    textAlign: \"right\",\n    padding: \"1rem 0\"\n  },\n  generateButton: {\n    color: violet,\n    background: \"white\"\n  }\n};\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nimport {\n  ResponsiveContainer,\n  BarChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Bar\n} from \"recharts\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nconst data = [\n  {\n    name: 1,\n    minutes: 11\n  },\n  {\n    name: 2,\n    minutes: 22\n  },\n  {\n    name: 3,\n    minutes: 33\n  },\n  {\n    name: 4,\n    minutes: 44\n  },\n  {\n    name: 5,\n    minutes: 55\n  },\n  {\n    name: 6,\n    minutes: 42\n  },\n  {\n    name: 7,\n    minutes: 25\n  }\n];\n\nfunction Chart(props) {\n  const { generateButtonContainer, generateButton } = props.classes;\n  return (\n    <div>\n      <ResponsiveContainer id=\"container\" width=\"95%\" height={300}>\n        <BarChart data={data} margin={{ top: 20 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"hour\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar\n            dataKey=\"minInHours\"\n            name=\"Minutes in this hours\"\n            barSize={20}\n            fill=\"#4823C2\"\n          />\n        </BarChart>\n      </ResponsiveContainer>\n      <Grid container className={generateButtonContainer}>\n        <Grid item xs={12}>\n          <Button variant=\"contained\" className={generateButton} size=\"small\">\n            Generate\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(Chart);\n","import Chart from \"./Chart\";\nexport default Chart;\n","const cyanogen = \"#E8F6FF\";\nconst violet = \"#4823C2\";\n\nexport default {\n  cyanogenRow: {\n    background: cyanogen\n  },\n  violetCell: {\n    color: violet\n  },\n  noTasks: {\n    textAlign: \"center\"\n  },\n  tasksButton: {\n    color: violet,\n    background: \"white\"\n  }\n};\n","import React from \"react\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nfunction Log(props) {\n  const { cyanogenRow, violetCell, noTasks, tasksButton } = props.classes;\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>№</TableCell>\n          <TableCell>Task</TableCell>\n          <TableCell>Time start</TableCell>\n          <TableCell>Time end</TableCell>\n          <TableCell>Time spend</TableCell>\n          <TableCell>Info</TableCell>\n          <TableCell>Delete</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow className={cyanogenRow}>\n          <TableCell className={noTasks} colSpan={7}>No tasks to show</TableCell>\n        </TableRow>\n        <TableRow className={cyanogenRow}>\n          <TableCell className={violetCell} component=\"th\" scope=\"row\">1</TableCell>\n          <TableCell className={violetCell}>Create tasks log</TableCell>\n          <TableCell className={violetCell}>02:50:00</TableCell>\n          <TableCell className={violetCell}>03:10:00</TableCell>\n          <TableCell className={violetCell}>00:20:00</TableCell>\n          <TableCell className={violetCell}>\n            <Button className={tasksButton} variant=\"contained\" size=\"small\">\n              Info\n            </Button>\n          </TableCell>\n          <TableCell>\n            <Button className={tasksButton} variant=\"contained\" size=\"small\">\n              Delete\n            </Button>\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  );\n}\n\nexport default withStyles(styles)(Log);\n","import Log from \"./Log\";\nexport default Log;\n","const blue = \"#00BCD3\";\n\nexport default {\n  tasksTimerContainer: {\n    padding: \"2rem\"\n  },\n  tabsContainer: {\n    background: blue,\n    boxShadow: \"none\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link, Route, withRouter } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport Timer from \"../Timer\";\nimport Chart from \"../Chart\";\nimport Log from \"../Log\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nclass TasksTimer extends Component {\n  constructor(props) {\n    super(props);\n\n    const { location } = props;\n\n    const currentTab =\n      (location.pathname === \"/chart\" && \"Chart\") || \"Log\";\n\n    this.state = {\n      currentTab\n    };\n  }\n\n  onChangeTab = (event, value) => {\n    this.setState({\n      currentTab: value\n    });\n  };\n\n  render() {\n    const { currentTab } = this.state;\n    const { tasksTimerContainer, tabsContainer } = this.props.classes;\n    return (\n      <div className={tasksTimerContainer}>\n        <Grid container justify=\"center\">\n          <Grid item xs={12} lg={10}>\n            <Timer />\n          </Grid>\n          <Grid item xs={12} lg={10}>\n            <section>\n              <AppBar position=\"relative\" className={tabsContainer}>\n                <Tabs\n                  variant=\"fullWidth\"\n                  onChange={this.onChangeTab}\n                  value={currentTab}\n                >\n                  <Tab\n                    value=\"Log\"\n                    label=\"Tasks log\"\n                    component={Link}\n                    to={\"/\"}\n                  />\n                  <Tab\n                    value=\"Chart\"\n                    label=\"Tasks chart\"\n                    component={Link}\n                    to={\"/chart\"}\n                  />\n                </Tabs>\n              </AppBar>\n\n              <Route path=\"/\" exact component={Log} />\n              <Route path=\"/chart\" exact component={Chart} />\n            </section>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(TasksTimer));\n","import TasksTimer from \"./TasksTimer\";\nexport default TasksTimer;\n","import React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./store/reducers\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport TasksTimer from \"./components/TasksTimer\";\n\nconst store = createStore(reducers);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={TasksTimer} />\n          <Route path=\"/chart\" exact component={TasksTimer} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}